import { useState } from 'react';
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Badge } from "@/components/ui/badge";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Calendar } from "@/components/ui/calendar";
import { Popover, PopoverContent, PopoverTrigger } from "@/components/ui/popover";
import Icon from '@/components/ui/icon';
import Navigation from '@/components/Navigation';
import Footer from '@/components/Footer';
import { format } from "date-fns";
import { ru } from "date-fns/locale";

const RentalPage = () => {
  const [searchTerm, setSearchTerm] = useState('');
  const [categoryFilter, setCategoryFilter] = useState('all');
  const [priceSort, setPriceSort] = useState('default');
  const [selectedDate, setSelectedDate] = useState<Date>();
  const [rentals, setRentals] = useState<Array<{id: number, startDate: Date, days: number}>>([]);

  const equipment = [
    {
      id: 1,
      title: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø—ã–ª–µ—Å–æ—Å KARCHER",
      description: "–ú–æ—â–Ω—ã–π –ø—ã–ª–µ—Å–æ—Å –¥–ª—è —Å—É—Ö–æ–π –∏ –≤–ª–∞–∂–Ω–æ–π —É–±–æ—Ä–∫–∏ —Å —Å–∏—Å—Ç–µ–º–æ–π —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ HEPA",
      pricePerDay: 800,
      pricePerWeek: 4500,
      category: "vacuum",
      brand: "Karcher",
      power: "1400 –í—Ç",
      capacity: "30 –ª",
      rating: 4.8,
      available: true,
      image: "üîå",
      features: ["HEPA —Ñ–∏–ª—å—Ç—Ä", "–°—É—Ö–∞—è/–≤–ª–∞–∂–Ω–∞—è —É–±–æ—Ä–∫–∞", "–ú–æ—â–Ω–æ–µ –≤—Å–∞—Å—ã–≤–∞–Ω–∏–µ", "–ë–æ–ª—å—à–æ–π –±–∞–∫"],
      specifications: {
        "–ú–æ—â–Ω–æ—Å—Ç—å": "1400 –í—Ç",
        "–û–±—ä–µ–º –±–∞–∫–∞": "30 –ª–∏—Ç—Ä–æ–≤", 
        "–í–µ—Å": "12 –∫–≥",
        "–î–ª–∏–Ω–∞ —à–Ω—É—Ä–∞": "10 –º"
      }
    },
    {
      id: 2,
      title: "–ü–∞—Ä–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä STEAM MASTER",
      description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è —Ö–∏–º–∏—á–µ—Å–∫–æ–π –æ—á–∏—Å—Ç–∫–∏ –±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–æ—é—â–∏—Ö —Å—Ä–µ–¥—Å—Ç–≤",
      pricePerDay: 600,
      pricePerWeek: 3500,
      category: "steam",
      brand: "SteamMaster",
      power: "2000 –í—Ç",
      capacity: "4 –ª",
      rating: 4.6,
      available: true,
      image: "üí®",
      features: ["–ë–µ–∑ —Ö–∏–º–∏–∏", "–í—ã—Å–æ–∫–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ", "–ë—ã—Å—Ç—Ä—ã–π –Ω–∞–≥—Ä–µ–≤", "–≠–∫–æ–ª–æ–≥–∏—á–Ω–æ"],
      specifications: {
        "–ú–æ—â–Ω–æ—Å—Ç—å": "2000 –í—Ç",
        "–û–±—ä–µ–º —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞": "4 –ª–∏—Ç—Ä–∞",
        "–î–∞–≤–ª–µ–Ω–∏–µ": "6 –±–∞—Ä",
        "–í—Ä–µ–º—è –Ω–∞–≥—Ä–µ–≤–∞": "3 –º–∏–Ω—É—Ç—ã"
      }
    },
    {
      id: 3,
      title: "–ü–æ–ª–æ–º–æ–µ—á–Ω–∞—è –º–∞—à–∏–Ω–∞ SCRUBBER PRO",
      description: "–°–∞–º–æ—Ö–æ–¥–Ω–∞—è –ø–æ–ª–æ–º–æ–µ—á–Ω–∞—è –º–∞—à–∏–Ω–∞ –¥–ª—è —É–±–æ—Ä–∫–∏ –±–æ–ª—å—à–∏—Ö –ø–ª–æ—â–∞–¥–µ–π",
      pricePerDay: 1200,
      pricePerWeek: 7000,
      category: "scrubber",
      brand: "ScrubberPro",
      power: "24–í",
      capacity: "50 –ª",
      rating: 4.9,
      available: false,
      image: "üöø",
      features: ["–°–∞–º–æ—Ö–æ–¥–Ω–∞—è", "–î–≤–∞ –±–∞–∫–∞", "–®–∏—Ä–æ–∫–∞—è —â–µ—Ç–∫–∞", "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è"],
      specifications: {
        "–®–∏—Ä–∏–Ω–∞ —É–±–æ—Ä–∫–∏": "51 —Å–º",
        "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å": "1800 –º¬≤/—á",
        "–û–±—ä–µ–º –±–∞–∫–æ–≤": "50/55 –ª",
        "–í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã": "3 —á–∞—Å–∞"
      }
    },
    {
      id: 4,
      title: "–ö–æ–≤—Ä–æ–º–æ–π–∫–∞ CARPET CLEAN",
      description: "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –º–∞—à–∏–Ω–∞ –¥–ª—è –≥–ª—É–±–æ–∫–æ–π —á–∏—Å—Ç–∫–∏ –∫–æ–≤—Ä–æ–≤ –∏ –º—è–≥–∫–æ–π –º–µ–±–µ–ª–∏",
      pricePerDay: 700,
      pricePerWeek: 4000,
      category: "carpet",
      brand: "CarpetClean", 
      power: "1200 –í—Ç",
      capacity: "12 –ª",
      rating: 4.4,
      available: true,
      image: "üßΩ",
      features: ["–ì–ª—É–±–æ–∫–∞—è —á–∏—Å—Ç–∫–∞", "–ë—ã—Å—Ç—Ä–∞—è —Å—É—à–∫–∞", "–£–¥–∞–ª–µ–Ω–∏–µ –ø—è—Ç–µ–Ω", "–ù–∞—Å–∞–¥–∫–∏ –≤ –∫–æ–º–ø–ª–µ–∫—Ç–µ"],
      specifications: {
        "–ú–æ—â–Ω–æ—Å—Ç—å": "1200 –í—Ç",
        "–û–±—ä–µ–º –±–∞–∫–∞": "12 –ª–∏—Ç—Ä–æ–≤",
        "–î–∞–≤–ª–µ–Ω–∏–µ": "3 –±–∞—Ä",
        "–®–∏—Ä–∏–Ω–∞ —á–∏—Å—Ç–∫–∏": "25 —Å–º"
      }
    },
    {
      id: 5,
      title: "–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–π –ø—ã–ª–µ—Å–æ—Å INDUSTRIAL",
      description: "–°–≤–µ—Ä—Ö–º–æ—â–Ω—ã–π –ø—ã–ª–µ—Å–æ—Å –¥–ª—è —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω–æ–≥–æ –º—É—Å–æ—Ä–∞ –∏ —Ç—è–∂–µ–ª—ã—Ö –∑–∞–≥—Ä—è–∑–Ω–µ–Ω–∏–π",
      pricePerDay: 900,
      pricePerWeek: 5500,
      category: "vacuum",
      brand: "Industrial",
      power: "3000 –í—Ç",
      capacity: "80 –ª", 
      rating: 4.7,
      available: true,
      image: "‚ö°",
      features: ["–°–≤–µ—Ä—Ö–º–æ—â–Ω—ã–π", "–°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–π –º—É—Å–æ—Ä", "–ë–æ–ª—å—à–æ–π –æ–±—ä–µ–º", "–ê–≤—Ç–æ–æ—á–∏—Å—Ç–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞"],
      specifications: {
        "–ú–æ—â–Ω–æ—Å—Ç—å": "3000 –í—Ç",
        "–û–±—ä–µ–º –±–∞–∫–∞": "80 –ª–∏—Ç—Ä–æ–≤",
        "–†–∞–∑—Ä–µ–∂–µ–Ω–∏–µ": "250 –º–±–∞—Ä",
        "–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å": "440 –º¬≥/—á"
      }
    },
    {
      id: 6,
      title: "–†–æ—Ç–æ—Ä–Ω–∞—è –º–∞—à–∏–Ω–∞ ROTARY POWER",
      description: "–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ä–æ—Ç–æ—Ä–Ω–∞—è –º–∞—à–∏–Ω–∞ –¥–ª—è –ø–æ–ª–∏—Ä–æ–≤–∫–∏, —à–ª–∏—Ñ–æ–≤–∫–∏ –∏ –∫—Ä–∏—Å—Ç–∞–ª–ª–∏–∑–∞—Ü–∏–∏ –ø–æ–ª–æ–≤",
      pricePerDay: 1000,
      pricePerWeek: 6000,
      category: "floor",
      brand: "RotaryPower",
      power: "1500 –í—Ç",
      capacity: "-",
      rating: 4.5,
      available: true,
      image: "‚öôÔ∏è",
      features: ["–ü–æ–ª–∏—Ä–æ–≤–∫–∞ –ø–æ–ª–æ–≤", "–†–∞–∑–Ω—ã–µ –Ω–∞—Å–∞–¥–∫–∏", "–†–µ–≥—É–ª–∏—Ä–æ–≤–∫–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏", "–ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è"],
      specifications: {
        "–ú–æ—â–Ω–æ—Å—Ç—å": "1500 –í—Ç", 
        "–î–∏–∞–º–µ—Ç—Ä —â–µ—Ç–∫–∏": "43 —Å–º",
        "–°–∫–æ—Ä–æ—Å—Ç—å": "154 –æ–±/–º–∏–Ω",
        "–í–µ—Å": "52 –∫–≥"
      }
    }
  ];

  const categories = [
    { value: 'all', label: '–í—Å—è —Ç–µ—Ö–Ω–∏–∫–∞' },
    { value: 'vacuum', label: '–ü—ã–ª–µ—Å–æ—Å—ã' },
    { value: 'steam', label: '–ü–∞—Ä–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã' },
    { value: 'scrubber', label: '–ü–æ–ª–æ–º–æ–µ—á–Ω—ã–µ –º–∞—à–∏–Ω—ã' },
    { value: 'carpet', label: '–ö–æ–≤—Ä–æ–º–æ–π–∫–∏' },
    { value: 'floor', label: '–ú–∞—à–∏–Ω—ã –¥–ª—è –ø–æ–ª–∞' }
  ];

  const filteredEquipment = equipment
    .filter(item => 
      (categoryFilter === 'all' || item.category === categoryFilter) &&
      (item.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
       item.description.toLowerCase().includes(searchTerm.toLowerCase()) ||
       item.brand.toLowerCase().includes(searchTerm.toLowerCase()))
    )
    .sort((a, b) => {
      if (priceSort === 'asc') return a.pricePerDay - b.pricePerDay;
      if (priceSort === 'desc') return b.pricePerDay - a.pricePerDay;
      if (priceSort === 'rating') return b.rating - a.rating;
      return 0;
    });

  const addToRentals = (equipmentId: number, days: number = 1) => {
    if (selectedDate) {
      setRentals([...rentals, {
        id: equipmentId,
        startDate: selectedDate,
        days
      }]);
    }
  };

  const getRentalCount = (equipmentId: number) => {
    return rentals.filter(rental => rental.id === equipmentId).length;
  };

  return (
    <div className="min-h-screen bg-background">
      <Navigation />
      
      <div className="container mx-auto px-4 py-8">
        <div className="mb-8">
          <h1 className="text-4xl font-bold text-foreground mb-4">–ê—Ä–µ–Ω–¥–∞ —Ç–µ—Ö–Ω–∏–∫–∏</h1>
          <p className="text-xl text-muted-foreground">
            –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ –¥–ª—è –∫–ª–∏–Ω–∏–Ω–≥–∞ –≤ –∞—Ä–µ–Ω–¥—É
          </p>
        </div>

        <div className="flex flex-col lg:flex-row gap-8">
          <div className="lg:w-1/4">
            <Card className="mb-6">
              <CardHeader>
                <CardTitle>–î–∞—Ç–∞ –∞—Ä–µ–Ω–¥—ã</CardTitle>
              </CardHeader>
              <CardContent>
                <Popover>
                  <PopoverTrigger asChild>
                    <Button variant="outline" className="w-full justify-start text-left">
                      <Icon name="Calendar" size={16} className="mr-2" />
                      {selectedDate ? format(selectedDate, "d MMMM yyyy", { locale: ru }) : "–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É"}
                    </Button>
                  </PopoverTrigger>
                  <PopoverContent className="w-auto p-0" align="start">
                    <Calendar
                      mode="single"
                      selected={selectedDate}
                      onSelect={setSelectedDate}
                      disabled={(date) => date < new Date()}
                      locale={ru}
                    />
                  </PopoverContent>
                </Popover>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>–§–∏–ª—å—Ç—Ä—ã</CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <label className="text-sm font-medium mb-2 block">–ü–æ–∏—Å–∫</label>
                  <Input
                    placeholder="–ù–∞–π—Ç–∏ —Ç–µ—Ö–Ω–∏–∫—É..."
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                  />
                </div>
                <div>
                  <label className="text-sm font-medium mb-2 block">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                  <Select value={categoryFilter} onValueChange={setCategoryFilter}>
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      {categories.map(category => (
                        <SelectItem key={category.value} value={category.value}>
                          {category.label}
                        </SelectItem>
                      ))}
                    </SelectContent>
                  </Select>
                </div>
                <div>
                  <label className="text-sm font-medium mb-2 block">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞</label>
                  <Select value={priceSort} onValueChange={setPriceSort}>
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="default">–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é</SelectItem>
                      <SelectItem value="asc">–¶–µ–Ω–∞: –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é</SelectItem>
                      <SelectItem value="desc">–¶–µ–Ω–∞: –ø–æ —É–±—ã–≤–∞–Ω–∏—é</SelectItem>
                      <SelectItem value="rating">–ü–æ —Ä–µ–π—Ç–∏–Ω–≥—É</SelectItem>
                    </SelectContent>
                  </Select>
                </div>

                {rentals.length > 0 && (
                  <div className="pt-4 border-t">
                    <h4 className="font-semibold mb-2">–ö –∞—Ä–µ–Ω–¥–µ</h4>
                    <div className="flex items-center justify-between">
                      <span className="text-sm text-muted-foreground">
                        –ü–æ–∑–∏—Ü–∏–π: {rentals.length}
                      </span>
                      <Button variant="outline" size="sm">
                        <Icon name="Calendar" size={14} className="mr-1" />
                        –û—Ñ–æ—Ä–º–∏—Ç—å
                      </Button>
                    </div>
                  </div>
                )}
              </CardContent>
            </Card>
          </div>

          <div className="lg:w-3/4">
            <div className="mb-4 flex items-center justify-between">
              <p className="text-muted-foreground">
                –ù–∞–π–¥–µ–Ω–æ –ø–æ–∑–∏—Ü–∏–π: <span className="font-semibold">{filteredEquipment.length}</span>
              </p>
            </div>

            <div className="grid gap-6">
              {filteredEquipment.map(item => (
                <Card key={item.id} className="hover:shadow-lg transition-shadow">
                  <CardHeader>
                    <div className="flex items-start justify-between">
                      <div className="flex items-center gap-4">
                        <div className="text-4xl">{item.image}</div>
                        <div>
                          <div className="flex items-center gap-2 mb-2">
                            <Badge variant={item.available ? "default" : "destructive"} className="text-xs">
                              {item.available ? '–î–æ—Å—Ç—É–ø–Ω–æ' : '–ó–∞–Ω—è—Ç–æ'}
                            </Badge>
                            <div className="flex items-center text-sm text-muted-foreground">
                              <Icon name="Star" size={14} className="text-yellow-400 fill-current mr-1" />
                              {item.rating}
                            </div>
                          </div>
                          <CardTitle className="text-xl mb-1">{item.title}</CardTitle>
                          <p className="text-sm text-muted-foreground">
                            {item.brand} ‚Ä¢ {item.power}
                          </p>
                        </div>
                      </div>
                      <div className="text-right">
                        <div className="text-2xl font-bold text-primary">{item.pricePerDay} ‚ÇΩ</div>
                        <div className="text-sm text-muted-foreground">–∑–∞ –¥–µ–Ω—å</div>
                        <div className="text-sm text-muted-foreground">
                          {item.pricePerWeek} ‚ÇΩ/–Ω–µ–¥–µ–ª—è
                        </div>
                      </div>
                    </div>
                  </CardHeader>
                  <CardContent>
                    <CardDescription className="mb-4">
                      {item.description}
                    </CardDescription>
                    
                    <div className="grid md:grid-cols-2 gap-6 mb-6">
                      <div>
                        <h4 className="font-semibold mb-2">–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</h4>
                        <div className="flex flex-wrap gap-1">
                          {item.features.map((feature, index) => (
                            <Badge key={index} variant="secondary" className="text-xs">
                              {feature}
                            </Badge>
                          ))}
                        </div>
                      </div>
                      
                      <div>
                        <h4 className="font-semibold mb-2">–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</h4>
                        <div className="space-y-1 text-sm">
                          {Object.entries(item.specifications).map(([key, value]) => (
                            <div key={key} className="flex justify-between">
                              <span className="text-muted-foreground">{key}:</span>
                              <span>{value}</span>
                            </div>
                          ))}
                        </div>
                      </div>
                    </div>

                    <div className="flex items-center justify-between">
                      <div className="flex gap-2">
                        <Button
                          variant="outline"
                          size="sm"
                          onClick={() => addToRentals(item.id, 1)}
                          disabled={!item.available || !selectedDate}
                        >
                          1 –¥–µ–Ω—å
                        </Button>
                        <Button
                          variant="outline"
                          size="sm"
                          onClick={() => addToRentals(item.id, 3)}
                          disabled={!item.available || !selectedDate}
                        >
                          3 –¥–Ω—è
                        </Button>
                        <Button
                          variant="outline"
                          size="sm"
                          onClick={() => addToRentals(item.id, 7)}
                          disabled={!item.available || !selectedDate}
                        >
                          –ù–µ–¥–µ–ª—è
                        </Button>
                      </div>
                      
                      <div className="flex items-center gap-2">
                        {getRentalCount(item.id) > 0 && (
                          <Badge variant="outline" className="text-xs">
                            {getRentalCount(item.id)}
                          </Badge>
                        )}
                        <Button
                          onClick={() => addToRentals(item.id)}
                          disabled={!item.available || !selectedDate}
                        >
                          <Icon name="Calendar" size={16} className="mr-2" />
                          –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å
                        </Button>
                      </div>
                    </div>

                    {!selectedDate && (
                      <p className="text-sm text-muted-foreground mt-2 text-center">
                        –í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É –∞—Ä–µ–Ω–¥—ã –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
                      </p>
                    )}
                  </CardContent>
                </Card>
              ))}
            </div>

            {filteredEquipment.length === 0 && (
              <div className="text-center py-12">
                <Icon name="Search" size={48} className="text-muted-foreground mx-auto mb-4" />
                <h3 className="text-xl font-semibold mb-2">–¢–µ—Ö–Ω–∏–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h3>
                <p className="text-muted-foreground">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞</p>
              </div>
            )}
          </div>
        </div>
      </div>
      
      <Footer />
    </div>
  );
};

export default RentalPage;